// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StockSharpDriver.Migrations.PropertiesStorage
{
    [DbContext(typeof(PropertiesStorageContext))]
    [Migration("20250825122001_PropertiesStorageContext001")]
    partial class PropertiesStorageContext001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("SharedLib.LockUniqueTokenModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Lockers");
                });

            modelBuilder.Entity("SharedLib.RubricModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContextName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedNameUpper")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("SortIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContextName");

                    b.HasIndex("IsDisabled");

                    b.HasIndex("Name");

                    b.HasIndex("NormalizedNameUpper");

                    b.HasIndex("ParentId");

                    b.HasIndex("NormalizedNameUpper", "ContextName")
                        .IsUnique();

                    b.HasIndex("SortIndex", "ParentId", "ContextName")
                        .IsUnique();

                    b.ToTable("Rubrics");
                });

            modelBuilder.Entity("SharedLib.StorageCloudParameterModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerPrimaryKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrefixPropertyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedDataJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("TypeName");

                    b.HasIndex("ApplicationName", "PropertyName");

                    b.HasIndex("PrefixPropertyName", "OwnerPrimaryKey");

                    b.ToTable("CloudProperties");
                });

            modelBuilder.Entity("SharedLib.TagModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedTagNameUpper")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerPrimaryKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrefixPropertyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("NormalizedTagNameUpper");

                    b.HasIndex("ApplicationName", "PropertyName");

                    b.HasIndex("PrefixPropertyName", "OwnerPrimaryKey");

                    b.HasIndex(new[] { "NormalizedTagNameUpper", "OwnerPrimaryKey", "ApplicationName" }, "IX_TagNameOwnerKeyUnique")
                        .IsUnique();

                    b.ToTable("CloudTags");
                });

            modelBuilder.Entity("SharedLib.RubricModelDB", b =>
                {
                    b.HasOne("SharedLib.RubricModelDB", "Parent")
                        .WithMany("NestedRubrics")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SharedLib.RubricModelDB", b =>
                {
                    b.Navigation("NestedRubrics");
                });
#pragma warning restore 612, 618
        }
    }
}
