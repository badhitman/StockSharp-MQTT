@inherits StockSharpAboutComponent

<MudTable ServerData="ServerReload"
          Dense Hover Striped
          Loading="IsBusyProgress"
          @ref="_tableRef">
    <ToolBarContent>
        <MudText Typo="Typo.h6">
            <span title="Click for reload instruments" style="cursor:pointer;" @onclick="_tableRef!.ReloadServerData">Instruments catalog</span>
        </MudText>
        <MudSpacer />
        <MudTextField T="string"
                      Label="Find"
                      Immediate
                      ValueChanged="@(s => OnSearch(s))"
                      Placeholder="Search"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium"
                      Class="mt-0 me-1" />
        <MudSelect T="BoardStockSharpMetaModel"
                   Label="Boards"
                   MultiSelection
                   @bind-SelectedValues="SelectedBoards"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Custom.Uncategorized.ChessKnight"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (BoardStockSharpMetaModel state in Boards)
            {
                <MudSelectItem T="BoardStockSharpMetaModel" Value="@state">
                    @state
                    @($"[x{@state.TotalCount} /♫{@state.ActualCount}]")
                </MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="CurrenciesTypesEnum"
                   Label="Currency"
                   MultiSelection
                   @bind-SelectedValues="CurrenciesSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.AttachMoney"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0">
            @foreach (CurrenciesTypesEnum state in Enum.GetValues<CurrenciesTypesEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="CurrenciesTypesEnum" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="InstrumentsStockSharpTypesEnum"
                   Label="Type`s"
                   MultiSelection
                   @bind-SelectedValues="TypesSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.Abc"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (InstrumentsStockSharpTypesEnum state in Enum.GetValues<InstrumentsStockSharpTypesEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="InstrumentsStockSharpTypesEnum" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="MarkersInstrumentStockSharpEnum?"
                   Label="Marker`s"
                   MultiSelectionTextFunc="@(new Func<List<string?>, string>(GetMultiSelectionText))"
                   MultiSelection SelectAll Clearable Dense
                   @bind-SelectedValues="MarkersSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.Checklist"
                   IconSize="Size.Small"
                   Class="mt-0 me-1">
            <MudSelectItem T="MarkersInstrumentStockSharpEnum?" Value="null">~ not set ~</MudSelectItem>
            @foreach (MarkersInstrumentStockSharpEnum state in Enum.GetValues<MarkersInstrumentStockSharpEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="MarkersInstrumentStockSharpEnum?" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="string"
                   Label="Columns"
                   MultiSelection
                   @bind-SelectedValues="ColumnsSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.ViewColumn"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (string state in columnsExt)
            {
                <MudSelectItem T="string" Value="@state">@state</MudSelectItem>
            }
        </MudSelect>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="Name" T="InstrumentTradeStockSharpViewModel">Name</MudTableSortLabel></MudTh>
        <MudTh>Code</MudTh>
        @if (columnsSelected?.Contains(_mcs) == true)
        {
            <MudTh>Markers</MudTh>
        }
        <MudTh>Currency</MudTh>
        <MudTh>Type</MudTh>
        @if (columnsSelected?.Contains(_mtp) == true)
        {
            <MudTh>Multiplier</MudTh>
        }
        @if (columnsSelected?.Contains(_std) == true)
        {
            <MudTh>Settlement</MudTh>
        }
        @if (columnsSelected?.Contains(_fv) == true)
        {
            <MudTh>FaceValue</MudTh>
        }
        @if (columnsSelected?.Contains(_dc) == true)
        {
            <MudTh>Decimals</MudTh>
        }
        @if (columnsSelected?.Contains(_isin) == true)
        {
            <MudTh>ISIN</MudTh>
        }
        @if (columnsSelected?.Contains(_ps) == true)
        {
            <MudTh>Price step</MudTh>
        }
        @if (columnsSelected?.Contains(_issD) == true)
        {
            <MudTh>Issue</MudTh>
        }
        @if (columnsSelected?.Contains(_mtD) == true)
        {
            <MudTh>Maturity</MudTh>
        }
        @if (columnsSelected?.Contains(_cr) == true)
        {
            <MudTh>CouponRate</MudTh>
        }
        @if (columnsSelected?.Contains(_lfP) == true)
        {
            <MudTh>LastFairPrice</MudTh>
        }
        @if (columnsSelected?.Contains(_cmnt) == true)
        {
            <MudTh>Comment</MudTh>
        }
        @if (columnsSelected?.Contains(_rbcs) == true)
        {
            <MudTh>Rubrics</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <InstrumentTableRowComponent Context="@context" Owner="this" />
    </RowTemplate>
    <NoRecordsContent>
        <MudText>Nothing found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Downloading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>