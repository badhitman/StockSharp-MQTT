@inherits StockSharpAboutComponent

<MudTable ServerData="ServerReload"
          Dense Hover Striped
          Loading="IsBusyProgress"
          @ref="_tableRef">
    <ToolBarContent>
        <MudText Typo="Typo.h6">
            <span title="Click for reload instruments" style="cursor:pointer;" @onclick="_tableRef!.ReloadServerData">Instruments</span>
        </MudText>
        <MudSpacer />
        <MudTextField T="string"
                      Label="Find"
                      Immediate
                      ValueChanged="@(s => OnSearch(s))"
                      Placeholder="Search"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium"
                      Class="mt-0 me-1" />
        <MudSelect T="BoardStockSharpViewModel"
                   Label="Boards"
                   MultiSelection
                   @bind-SelectedValues="SelectedBoards"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Custom.Uncategorized.ChessKnight"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (BoardStockSharpViewModel state in Boards)
            {
                <MudSelectItem Disabled="AboutConnection is not null && state.LastUpdatedAtUTC < AboutConnection.LastConnectedAt" T="BoardStockSharpViewModel" Value="@state">@state</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="CurrenciesTypesEnum"
                   Label="Currency"
                   MultiSelection
                   @bind-SelectedValues="CurrenciesSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.AttachMoney"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0">
            @foreach (CurrenciesTypesEnum state in Enum.GetValues<CurrenciesTypesEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="CurrenciesTypesEnum" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="InstrumentsStockSharpTypesEnum"
                   Label="Type`s"
                   MultiSelection
                   @bind-SelectedValues="TypesSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.Abc"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (InstrumentsStockSharpTypesEnum state in Enum.GetValues<InstrumentsStockSharpTypesEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="InstrumentsStockSharpTypesEnum" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="MarkersInstrumentStockSharpEnum?"
                   Label="Marker`s"
                   MultiSelectionTextFunc="@(new Func<List<string?>, string>(GetMultiSelectionText))"
                   MultiSelection SelectAll Clearable Dense
                   @bind-SelectedValues="MarkersSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.Checklist"
                   IconSize="Size.Small"
                   Class="mt-0 me-1">
            <MudSelectItem T="MarkersInstrumentStockSharpEnum?" Value="null">~ not set ~</MudSelectItem>
            @foreach (MarkersInstrumentStockSharpEnum state in Enum.GetValues<MarkersInstrumentStockSharpEnum>().OrderBy(x => x.DescriptionInfo()))
            {
                <MudSelectItem T="MarkersInstrumentStockSharpEnum?" Value="@state">@state.DescriptionInfo()</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="string"
                   Label="Columns"
                   MultiSelection
                   @bind-SelectedValues="ColumnsSelected"
                   Adornment="Adornment.Start"
                   AdornmentIcon="@Icons.Material.Filled.ViewColumn"
                   IconSize="Size.Small"
                   Clearable
                   Dense
                   Class="mt-0 me-1">
            @foreach (string state in columnsExt)
            {
                <MudSelectItem T="string" Value="@state">@state</MudSelectItem>
            }
        </MudSelect>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="Name" T="InstrumentTradeStockSharpViewModel">Name</MudTableSortLabel></MudTh>
        <MudTh>Code</MudTh>
        @if (columnsSelected?.Contains(_mcs) == true)
        {
            <MudTh>Markers</MudTh>
        }
        <MudTh>Currency</MudTh>
        <MudTh>Type</MudTh>
        @if (columnsSelected?.Contains(_mtp) == true)
        {
            <MudTh>Multiplier</MudTh>
        }
        @if (columnsSelected?.Contains(_std) == true)
        {
            <MudTh>Settlement</MudTh>
        }
        @if (columnsSelected?.Contains(_fv) == true)
        {
            <MudTh>FaceValue</MudTh>
        }
        @if (columnsSelected?.Contains(_dc) == true)
        {
            <MudTh>Decimals</MudTh>
        }
        @if (columnsSelected?.Contains(_isin) == true)
        {
            <MudTh>ISIN</MudTh>
        }
        @if (columnsSelected?.Contains(_ps) == true)
        {
            <MudTh>Price step</MudTh>
        }
        @if (columnsSelected?.Contains(_issD) == true)
        {
            <MudTh>Issue</MudTh>
        }
        @if (columnsSelected?.Contains(_mtD) == true)
        {
            <MudTh>Maturity</MudTh>
        }
        @if (columnsSelected?.Contains(_cr) == true)
        {
            <MudTh>CouponRate</MudTh>
        }
        @if (columnsSelected?.Contains(_lfP) == true)
        {
            <MudTh>LastFairPrice</MudTh>
        }
        @if (columnsSelected?.Contains(_cmnt) == true)
        {
            <MudTh>Comment</MudTh>
        }
        @if (columnsSelected?.Contains(_rbcs) == true)
        {
            <MudTh>Rubrics</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name" title="@($"last updated: {(DateTime.UtcNow - context.LastUpdatedAtUTC).Duration().ToReadableString()}")">
            <div class="hstack">
                <MudHighlighter Text="@context.Name" HighlightedText="@searchString" />
                <sup style="cursor:pointer;" class="bi bi-gear ms-1" @onclick="() => OpenDialogAsync(context)"></sup>
                <sup @onclick="() => { if (!EachDisable) { ManualOrder(context); } }" style="@StyleTradeSup(context)" class="@ClassTradeSup(context)"></sup>
            </div>
        </MudTd>
        <MudTd DataLabel="Code">
            <strong class="me-2">
                <MudHighlighter Text="@context.IdRemote" HighlightedText="@searchString" />
            </strong>
        </MudTd>
        @if (columnsSelected?.Contains(_mcs) == true)
        {
            <MudTd DataLabel="Markers">
                <MarkersOfInstrumentComponent Instrument="context" />
            </MudTd>
        }
        <MudTd DataLabel="Currency">@((CurrenciesTypesEnum)context.Currency)</MudTd>
        <MudTd DataLabel="Type">@((InstrumentsStockSharpTypesEnum)context.TypeInstrument)</MudTd>
        @if (columnsSelected?.Contains(_mtp) == true)
        {
            <MudTd DataLabel="Multiplier">@(context.Multiplier)</MudTd>
        }
        @if (columnsSelected?.Contains(_std) == true)
        {
            <MudTd DataLabel="Settlement">@(context.SettlementDate?.ToString("d"))</MudTd>
        }
        @if (columnsSelected?.Contains(_fv) == true)
        {
            <MudTd DataLabel="FaceValue">@(context.FaceValue)</MudTd>
        }
        @if (columnsSelected?.Contains(_dc) == true)
        {
            <MudTd DataLabel="Settlement">@(context.Decimals)</MudTd>
        }
        @if (columnsSelected?.Contains(_isin) == true)
        {
            <MudTd DataLabel="ISIN">@(context.ISIN)</MudTd>
        }
        @if (columnsSelected?.Contains(_ps) == true)
        {
            <MudTd DataLabel="PriceStep">@(context.PriceStep)</MudTd>
        }
        @if (columnsSelected?.Contains(_issD) == true)
        {
            <MudTd DataLabel="Issue">
                @if (context.IssueDate != default)
                {
                    <text>@(context.IssueDate.ToShortDateString())</text>
                }
            </MudTd>
        }
        @if (columnsSelected?.Contains(_mtD) == true)
        {
            <MudTd DataLabel="Maturity">
                @if (context.MaturityDate != default)
                {
                    <text>@(context.MaturityDate.ToShortDateString())</text>
                }
            </MudTd>
        }
        @if (columnsSelected?.Contains(_cr) == true)
        {
            <MudTd DataLabel="CouponRate">@(context.CouponRate)</MudTd>
        }
        @if (columnsSelected?.Contains(_lfP) == true)
        {
            <MudTd DataLabel="LastFairPrice">@(context.LastFairPrice)</MudTd>
        }
        @if (columnsSelected?.Contains(_cmnt) == true)
        {
            <MudTd DataLabel="Comment">@(context.Comment)</MudTd>
        }
        @if (columnsSelected?.Contains(_rbcs) == true)
        {
            <MudTd DataLabel="Rubrics"><RubricsForInstrumentComponent Instrument="context" /></MudTd>
        }
    </RowTemplate>
    <NoRecordsContent>
        <MudText>Nothing found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Downloading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<MudDialog @bind-Visible="ManualOrderCreating" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> New order
        </MudText>
    </TitleContent>
    <DialogContent>
        <TestComponent SetInstrument="manualOrderContext" />
    </DialogContent>
</MudDialog>