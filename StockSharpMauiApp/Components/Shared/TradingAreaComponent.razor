@using BlazorLib.Components.StockSharp
@using SharedLib

@inherits StockSharpAboutComponent

@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
}
else if (instruments is null)
{
    <div class="alert alert-warning" role="alert">
        Unable to retrieve working tools
    </div>
}
else if (instruments.Count == 0)
{
    <figure class="text-center">
        <blockquote class="blockquote">
            <p>Missing tools...</p>
        </blockquote>
        <figcaption class="blockquote-footer">
            Specify the tools <cite title="tools from favorites are used in the work">that you want to work with</cite>
        </figcaption>
    </figure>
}
else
{
    <MudStack Row Class="mb-2">
        <MudButton OnClick="async () => await LimitChange(OperatorsEnum.Multiplication, 2)" Color="Color.Secondary" Disabled="@(AboutConnection?.Curve is null)">x2</MudButton>
        <MudButton OnClick="async () => await LimitChange(OperatorsEnum.Dividing, 2)" Color="Color.Secondary" Disabled="@(AboutConnection?.Curve is null)">/2</MudButton>
        <MudButton OnClick="async () => await ShiftCurveChange(1)" Color="Color.Secondary" Disabled="@(AboutConnection?.Curve is null)">S+</MudButton>
        <MudButton OnClick="async () => await ShiftCurveChange(-1)" Color="Color.Secondary" Disabled="@(AboutConnection?.Curve is null)">S-</MudButton>
        <MudSpacer />
        <div class="input-group">
            <span class="input-group-text">Quote</span>
            <input @bind-value="QuoteVolume" @bind-value:event="oninput" type="number" aria-label="Volume" placeholder="Volume" class="form-control">
            <input @bind-value="QuoteSizeVolume" @bind-value:event="oninput" type="number" aria-label="Size" placeholder="Size" class="form-control">
            <button @onclick=ResetAllTradeStrategiesInstruments
                    class="btn btn-outline-success bi bi-recycle"
                    type="button"
                    title="Reset all strategies"
                    disabled="@(AboutConnection?.Curve is null)">
                Reset
            </button>
        </div>
    </MudStack>
    <MudTable ServerData="ServerReload" Dense Hover @ref=tableRef>
        <ToolBarContent>
            <MudText title="@($"Click for {(visibleName ? "hide" : "show")} name")" Typo="Typo.h6" Style="cursor:pointer;" @onclick=ToggleNameVisible>Trade strategy</MudText>
            <MudSpacer />
        </ToolBarContent>
        <ColGroup>
            <col>
            <col style="width: 130px;">
            <col style="width: 130px;">
            <col>
            <col style="width: 100px;">
            <col style="width: 100px;">
            <col style="width: 100px;">
            <col style="width: 100px;">
            <col style="width: 100px;">
            <col style="width: 350px;">
            <col>
        </ColGroup>
        <HeaderContent>
            <MudTh>Bond</MudTh>
            <MudTh>Price</MudTh>
            <MudTh>Value</MudTh>
            <MudTh>Actions</MudTh>
            <MudTh title="Small Bid Volume">SBV</MudTh>
            <MudTh title="Small Offer Volume">SOV</MudTh>
            <MudTh title="Small Offset">SO</MudTh>
            <MudTh title="Working Volume">WV</MudTh>
            <MudTh>Shift</MudTh>
            <MudTh>Confines</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <CascadingValue Value="this">
                <TradingRowComponent Instrument="context" NameInstrumentVisible=visibleName />
            </CascadingValue>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>No matching records found</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}