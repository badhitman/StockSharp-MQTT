@using BlazorLib.Components.StockSharp
@using SharedLib

@inherits StockSharpAboutComponent

@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
}
else if (instruments is null)
{
    <div class="alert alert-warning" role="alert">
        Unable to retrieve working tools
    </div>
}
else if (instruments.Count == 0)
{
    <figure class="text-center">
        <blockquote class="blockquote">
            <p>Missing tools...</p>
        </blockquote>
        <figcaption class="blockquote-footer">
            Specify the tools <cite title="tools from favorites are used in the work">that you want to work with</cite>
        </figcaption>
    </figure>
}

else
{
    <MudStack Row="true">
        <MudButton Color="Color.Secondary">x2</MudButton>
        <MudButton Color="Color.Secondary">/2</MudButton>
        <MudButton Color="Color.Secondary">S+</MudButton>
        <MudButton Color="Color.Secondary">S-</MudButton>
        <MudSpacer />
        <div class="input-group">
            <span class="input-group-text">Quote</span>
            <input @bind-value="QuoteVolume" @bind-value:event="oninput" type="number" aria-label="Volume" placeholder="Volume" class="form-control">
            <input @bind-value="QuoteSizeVolume" @bind-value:event="oninput" type="number" aria-label="Size" placeholder="Size" class="form-control">
            <input @bind-value="SkipSizeVolume" @bind-value:event="oninput" type="number" aria-label="Skip" placeholder="SkipSizeVolume" class="form-control">
            <button class="btn btn-outline-success bi bi-recycle" type="button"> Reset</button>
        </div>
    </MudStack>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th @onclick="() => ShowNamesInstruments = !ShowNamesInstruments" scope="col">Bond</th>
                <th scope="col" style="width: 100px;">Price</th>
                <th scope="col" style="width: 100px;">Volume</th>
                <th scope="col">Actions</th>

                <th title="Small Bid Volume" scope="col" style="width: 100px;">SBV</th>
                <th title="Small Offer Volume" scope="col" style="width: 100px;">SOV</th>
                <th title="Small Offset" scope="col" style="width: 100px;">SO</th>
                <th title="Working Volume" scope="col" style="width: 100px;">WV</th>

                <th scope="col" style="width: 100px;">Shift</th>
                <th scope="col">Confines</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            <CascadingValue Value="this">
                @foreach (InstrumentTradeStockSharpViewModel i in instruments)
                {
                    <TradingRowComponent Instrument="i" @key="@($"instr_{i.Id}")" ShowNamesInstruments="ShowNamesInstruments" />
                }
            </CascadingValue>
        </tbody>
    </table>
}