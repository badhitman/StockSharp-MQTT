@using BlazorLib.Components.StockSharp
@using SharedLib

@inherits StockSharpBaseComponent
@{
    string _opClass = !Available ? "opacity-25" : "";
}
<tr>
    @if (IsBusyProgress)
    {
        <th colspan="8">
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
        </th>
    }
    else
    {
        <th class="@_opClass" scope="row" title="@Instrument.Name">
            <input disabled="@(!Available)" type="text" readonly class="form-control-plaintext form-control-sm" value="@Instrument.Code">
            @if (ShowNamesInstruments)
            {
                <span>@Instrument.Name</span>
            }
        </th>
        <td class="@_opClass">
            @if (Instrument.Markers is not null && Instrument.Markers.Count != 0)
            {
                <div class="hstack">
                    @foreach (MarkerInstrumentStockSharpViewModel _ie in Instrument.Markers)
                    {
                        string colorClass = _ie.MarkerDescriptor switch
                        {
                            MarkersInstrumentStockSharpEnum.Illiquid => "primary",
                            MarkersInstrumentStockSharpEnum.IsNew => "info",
                            MarkersInstrumentStockSharpEnum.IsMarketMaker => "warning",
                            _ => "danger",
                        };
                        <span class="badge text-bg-@colorClass me-1">@_ie.MarkerDescriptor.DescriptionInfo()</span>
                    }
                </div>
            }
        </td>
        <td><input @bind-value="BasePrice" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td><input @bind-value="ValueOperation" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td class="@_opClass">
            <div class="btn-group btn-group-sm" role="group">
                <button disabled="@(!Available)" type="button" class="btn btn-outline-warning">buy</button>
                <button disabled="@(!Available)" type="button" class="btn btn-outline-primary">sell</button>
                <button disabled="@(!Available)" type="button" class="btn btn-outline-warning">bid</button>
                <button disabled="@(!Available)" type="button" class="btn btn-outline-primary">off</button>
            </div>
        </td>

        <td><input @bind-value="SmallBidVolume" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td><input @bind-value="SmallOfferVolume" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td><input @bind-value="SmallOffset" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td><input @bind-value="WorkingVolume" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>

        <td><input @bind-value="ShiftPosition" type="number" class="form-control form-control-sm" @bind-value:event="oninput"></td>
        <td>
            <div class="input-group input-group-sm">
                <div class="input-group-text">
                    <input @bind="IsSmall" class="form-check-input mt-0" type="checkbox" aria-label="IsSmall">
                </div>
                <span class="input-group-text">L1</span>
                <input @bind-value="LowLimit" type="number" class="form-control" @bind-value:event="oninput">
                <span class="input-group-text">L2</span>
                <input @bind-value="HightLimit" type="number" class="form-control" @bind-value:event="oninput">
            </div>
        </td>
        <td class="@_opClass">
            <div class="input-group input-group-sm">
                <button title="reset" disabled="@(!Available)" class="btn btn-outline-success bi bi-recycle" type="button"></button>
            </div>
        </td>
    }
</tr>